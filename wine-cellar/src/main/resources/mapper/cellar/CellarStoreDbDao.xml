<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.cellar.dao.CellarStoreDbDao">

	<!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.cellar.entity.CellarStoreDbEntity" id="cellarStoreDbMap">
        <result property="storeId" column="store_id"/>
        <result property="storeName" column="store_name"/>
        <result property="provinceId" column="province_id"/>
        <result property="cityId" column="city_id"/>
        <result property="areaId" column="area_id"/>
        <result property="detailedAddress" column="detailed_address"/>
        <result property="storeDiscounts" column="store_discounts"/>
        <result property="supportTheirOwn" column="support_their_own"/>
        <result property="full" column="full"/>
        <result property="reductionOf" column="reduction_of"/>
        <result property="storeBackgroundMap" column="store_background_map"/>
        <result property="storeHeadPicture" column="store_head_picture"/>
        <result property="longitude" column="longitude"/>
        <result property="latitude" column="latitude"/>
        <result property="createTime" column="create_time"/>
        <result property="state" column="state"/>
        <result property="distance" column="distance"/>
        <collection property="cellarCommodityDbEntities" javaType="list" ofType="io.renren.modules.cellar.entity.CellarCommodityDbEntity">
            <id property="commodityId" column="commodity_id"/>
            <result property="commodityName" column="commodity_name"/>
            <result property="originalPrice" column="original_price"/>
            <result property="presentPrice" column="present_price"/>
            <result property="graphicDetails" column="graphic_details"/>
            <result property="picture" column="picture"/>
            <result property="label" column="label"/>
            <result property="creationTime" column="creation_time"/>
            <result property="state" column="state"/>
            <result property="monthSales" column="month_sales"/>
            <result property="totalSales" column="total_sales"/>
            <result property="inventory" column="inventory"/>
            <result property="highPraise" column="high_praise"/>
            <result property="commodityRotationChart" column="commodity_rotation_chart"/>
            <result property="productSpecifications" column="product_specifications"/>
            <result property="storeId" column="store_id"/>
            <result property="categoryId" column="category_id"/>
            <result property="categoryPath" column="category_path"/>
        </collection>
    </resultMap>


    <select id="indexList"  parameterType="io.renren.modules.cellar.entity.CellarStoreDbEntity" resultMap="cellarStoreDbMap">
        SELECT
            cs.*,
            cc.commodity_id,
            cc.commodity_name,
            cc.original_price,
            cc.present_price,
            cc.graphic_details,
            cc.picture,
            cc.label,
            cc.creation_time,
            cc.month_sales,
            cc.total_sales,
            cc.inventory,
            cc.high_praise,
            cc.commodity_rotation_chart,
            cc.product_specifications,
            cc.category_id,
            cc.category_path,
            (
                6371 * acos(
                  cos( radians( cs.latitude ) ) * cos( radians( #{ew.latitude} ) ) * cos( radians( #{ew.longitude} ) - radians( cs.longitude ) ) + sin( radians( cs.latitude ) ) * sin( radians( #{ew.latitude} ) )
                )
            ) AS distance
        FROM
            cellar_store_db cs
            LEFT JOIN cellar_commodity_db cc ON cc.store_id = cs.store_id
            WHERE
              cs.state = 0
              <if test="ew.key != null and ew.key != ''">
                  AND CONCAT(cs.store_name,',',cc.commodity_name) LIKE CONCAT('%',#{ew.key},'%')
              </if>
        <if test="ew.sort != null and ew.sort != '' and ew.sort == 1">
            ORDER BY
              distance
        </if>
        <if test="ew.sort != null and ew.sort != '' and ew.sort == 2">
            ORDER BY
                cc.high_praise desc
        </if>
    </select>


    <select id="nearStoreList" parameterType="io.renren.modules.cellar.entity.CellarStoreDbEntity" resultMap="cellarStoreDbMap">
        SELECT
        a.*
        ,(
            6371 * acos(
              cos( radians( a.latitude ) ) * cos( radians( #{ew.latitude} ) ) * cos( radians( #{ew.longitude} ) - radians( a.longitude ) ) + sin( radians( a.latitude ) ) * sin( radians( #{ew.latitude} ) )
            )
        ) AS distance,
        (SELECT COUNT(1) FROM cellar_kill_activity_db WHERE store_id = a.store_id) count,
        (SELECT COUNT(1) FROM cellar_group_activity_db WHERE store_id = a.store_id) groupCount,
        (SELECT COUNT(1) FROM cellar_bargaining_activity_db WHERE store_id = a.store_id) bargainingCount
        FROM
        cellar_store_db a
        WHERE
          1 = 1
        <if test="ew.state != null and ew.state != ''">
          AND  a.state = #{ew.state}
        </if>
        <if test="ew.key != null and ew.key != ''">
          AND  a.store_name like CONCAT('%','#{ew.key}','%')
        </if>
        <if test="ew.storeId != null and ew.storeId != ''">
          AND a.store_id = #{ew.storeId}
        </if>
        having distance &lt; #{ew.distance}
        <if test="ew.storeType != null and ew.storeType == 5">
            AND count > 0
        </if>
        <if test="ew.storeType != null and ew.storeType == 4">
            AND groupCount > 0
        </if>
        <if test="ew.storeType != null and ew.storeType == 6">
            AND bargainingCount > 0
        </if>
        ORDER BY
            distance
    </select>


</mapper>